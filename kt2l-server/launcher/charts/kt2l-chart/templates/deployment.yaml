#
# kt2l-server - kt2l as server
# Copyright Â© 2024 Mike Hummel (mh@mhus.de)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ include "kt2l-chart.fullname" . }}
    {{- include "kt2l-chart.labels" . | nindent 4 }}
  name: {{ include "kt2l-chart.fullname" . }}
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "kt2l-chart.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "kt2l-chart.fullname" . }}
        {{- include "kt2l-chart.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "kt2l-chart.fullname" . }}
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ include "kt2l-chart.fullname" . }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 9080
              name: http
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "kt2l-chart.fullname" . }}-passwords
            - configMapRef:
                name: {{ include "kt2l-chart.fullname" . }}-config
          volumeMounts:
            - name: config
              mountPath: /app/kt2l-server/config/local
          livenessProbe:
            failureThreshold: 60
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: {{ include "kt2l-chart.fullname" . }}-config
