"use strict";(self.webpackChunkKT2L=self.webpackChunkKT2L||[]).push([[6080],{5524:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=s(5893),o=s(1151);const i={sidebar_position:12,title:"Storage"},r="Storage Configuration",c={id:"configuration/config-storage",title:"Storage",description:"This section describes the configuration options available for the storage system. Storage is where",source:"@site/docs/configuration/config-storage.md",sourceDirName:"configuration",slug:"/configuration/config-storage",permalink:"/docs/configuration/config-storage",draft:!1,unlisted:!1,editUrl:"https://github.com/mhus/kt2l/blob/main/docs/docs/configuration/config-storage.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,title:"Storage"},sidebar:"tutorialSidebar",previous:{title:"Users",permalink:"/docs/configuration/config-users"},next:{title:"Known Issues",permalink:"/docs/known-issues"}},a={},l=[{value:"Configuration Options",id:"configuration-options",level:2},{value:"Directory Buckets",id:"directory-buckets",level:2},{value:"AWS S3 Buckets",id:"aws-s3-buckets",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"storage-configuration",children:"Storage Configuration"}),"\n",(0,t.jsx)(n.p,{children:"This section describes the configuration options available for the storage system. Storage is where\nfiles are written to. The storage is accessible via the Storage Panel."}),"\n",(0,t.jsx)(n.p,{children:"Configuring storage means to configure storage for users. Storage can be per user or shared among users. To\ndo so you need to configure the storage buckets. A bucket is a storage location where files are stored."}),"\n",(0,t.jsx)(n.p,{children:"You can configure multiple buckets and assign them to users. You can also configure the default bucket."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"buckets:\n  - name: common\n    users:\n      - autoload\n    type: directory\n    root: ${home}/home/common\n  - name: default\n    type: directory\n    root: ${home}/home/users/${username}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To find a bucket for a user all buckets will be processed in the order they are defined in the configuration. If\nno ",(0,t.jsx)(n.code,{children:"users"})," key is defined, the bucket will be used for all users. Else the bucket will be used for the defined\nusers. In the ",(0,t.jsx)(n.code,{children:"root"})," key you can define the start directory for the user in the bucket (depending on the bucket type)."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(n.p,{children:"The following configuration options are available for the storage system:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type"})," The bucket implementation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"root"})," The root directory in the bucket."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"users"})," The users that can access the bucket."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"directory-buckets",children:"Directory Buckets"}),"\n",(0,t.jsx)(n.p,{children:"The directory bucket is a simple bucket implementation that stores files in a directory."}),"\n",(0,t.jsx)(n.p,{children:"Placeholders:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${home}"})," The home directory of the server."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${username}"})," The username of the user."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"aws-s3-buckets",children:"AWS S3 Buckets"}),"\n",(0,t.jsx)(n.p,{children:"The AWS S3 bucket is a bucket implementation that stores files in an AWS S3 bucket."}),"\n",(0,t.jsx)(n.p,{children:"Placeholders:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${username}"})," The username of the user."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Additional Properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"accessPropertiesFile"})," The path to the AWS properties file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"accessKey"})," The AWS access key (if accessPropertiesFile is not set)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"secretKey"})," The AWS secret key (if accessPropertiesFile is not set)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"region"})," The AWS region."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bucket"})," The AWS S3 bucket name."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>r});var t=s(7294);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);