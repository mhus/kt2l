"use strict";(self.webpackChunkKT2L=self.webpackChunkKT2L||[]).push([[281],{6701:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var s=i(5893),t=i(1151);const o={sidebar_position:1,title:"Contribute"},l="Contribute",r={id:"contribute/contribute",title:"Contribute",description:"General guidelines",source:"@site/docs/contribute/contribute.md",sourceDirName:"contribute",slug:"/contribute/",permalink:"/docs/contribute/",draft:!1,unlisted:!1,editUrl:"https://github.com/mhus/kt2l/blob/main/docs/docs/contribute/contribute.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Contribute"},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/category/configuration-1"},next:{title:"Documentation",permalink:"/docs/contribute/docu"}},a={},d=[{value:"General guidelines",id:"general-guidelines",level:2},{value:"Opening an issue",id:"opening-an-issue",level:2},{value:"Opening a PR",id:"opening-a-pr",level:2},{value:"Guidelines for new features",id:"guidelines-for-new-features",level:2},{value:"Guidelines for bug fixes",id:"guidelines-for-bug-fixes",level:2}];function u(e){const n={a:"a",h1:"h1",h2:"h2",li:"li",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"contribute",children:"Contribute"}),"\n",(0,s.jsx)(n.h2,{id:"general-guidelines",children:"General guidelines"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you want to contribute a bug fix or a new feature that isn't listed in the\n",(0,s.jsx)(n.a,{href:"https://github.com/mhus/kt2l/issues",children:"issues"})," yet, please open a new issue for\nit and link it to your PR."]}),"\n",(0,s.jsxs)(n.li,{children:["A lot of ",(0,s.jsx)(n.a,{href:"https://jlbp.dev/",children:"Google's Best Practices for Java Libraries"})," apply to this project as well."]}),"\n",(0,s.jsx)(n.li,{children:"Keep the code compatible with the latest LTE Java version (Java 21 at the moment)."}),"\n",(0,s.jsx)(n.li,{children:"Avoid adding new dependencies as much as possible. If absolutely necessary, try to use the same libraries\nwhich are already used in the project."}),"\n",(0,s.jsx)(n.li,{children:"Write unit and/or integration tests for your code."}),"\n",(0,s.jsx)(n.li,{children:"Avoid making breaking changes. Always keep backward compatibility in mind. Specially the described behavior\nin this documentation should not change."}),"\n",(0,s.jsx)(n.li,{children:"Follow existing naming conventions."}),"\n",(0,s.jsx)(n.li,{children:"Follow existing code style present in the project."}),"\n",(0,s.jsx)(n.li,{children:"Large features should be discussed with maintainers before implementation. Please ping @mhus in the\ncomments on the issue."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"opening-an-issue",children:"Opening an issue"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Please fill in all sections of the issue template."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"opening-a-pr",children:"Opening a PR"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Link an ",(0,s.jsx)(n.a,{href:"https://github.com/mhus/kt2l/issues",children:"issue"})," to your PR if possible only small changes can be\naccepted without issue. In this case describe your changes in the PR."]}),"\n",(0,s.jsx)(n.li,{children:"Fill in all the sections of the PR template."}),"\n",(0,s.jsx)(n.li,{children:"Make sure you've added tests if possible."}),"\n",(0,s.jsx)(n.li,{children:"Make sure you've added documentation where required."}),"\n",(0,s.jsx)(n.li,{children:"For new big features, make sure you've added integration tests and documentation."}),"\n",(0,s.jsxs)(n.li,{children:["Please make it easier to review your PR:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep changes as small as possible."}),"\n",(0,s.jsx)(n.li,{children:"Do not combine refactoring with changes in a single PR."}),"\n",(0,s.jsx)(n.li,{children:"Avoid reformatting existing code."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Provide PR in separate branches. Do not mix multiple PRs in a single branch."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"guidelines-for-new-features",children:"Guidelines for new features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use the existing entry points described in this documentation for new features. Do not add new\nentry points unless absolutely necessary."}),"\n",(0,s.jsx)(n.li,{children:"Try to enhance existing features instead of adding new ones."}),"\n",(0,s.jsx)(n.li,{children:"New features should be optional and should not change the behavior of existing features."}),"\n",(0,s.jsx)(n.li,{children:"It should be possible to integrate new features into existing code without changing the existing code."}),"\n",(0,s.jsx)(n.li,{children:"New features should be well documented."}),"\n",(0,s.jsx)(n.li,{children:"New features should be tested."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"guidelines-for-bug-fixes",children:"Guidelines for bug fixes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Bug fixes should not change the behavior of existing features."}),"\n",(0,s.jsx)(n.li,{children:"Bug fixes should have an associated issue or a detailed description of the bug in the PR."}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>l});var s=i(7294);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);